@using Microsoft.AspNetCore.Identity
@using Hamburger_MVC.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
		</li>
		@if(await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
		{
			<li class="nav-item">
				<a asp-area="AdminPanel" asp-controller="Panel" asp-action="Index" class="nav-link text-dark">Yönetim Paneli</a>
			</li>
		}
		else
		{
			<li class="nav-item">
				<a asp-area="UserPanel" asp-controller="Panel" asp-action="Index" class="nav-link text-dark">Uye Paneli</a>
			</li>
			<li class="nav-item">
				<a asp-area="AdminPanel" asp-controller="Panel" asp-action="Index" class="nav-link text-dark">Yönetim Paneli</a>
			</li>
		}
		<li class="nav-item">
			<form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Panel", new { area = "UserPanel" })">
				<button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
